# 멀티스테이지 빌드로 이미지 크기 최적화
FROM python:3.10-slim as builder

WORKDIR /app

# 시스템 의존성 설치
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Python 의존성 설치
COPY requirements.txt .
RUN pip install --user --no-cache-dir --upgrade pip && \
    pip install --user --no-cache-dir -r requirements.txt

# 프로덕션 스테이지
FROM python:3.10-slim

WORKDIR /app

# 시스템 의존성 설치 (curl만 설치, gcc 제거)
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 비-root 사용자 생성
RUN adduser --disabled-password --gecos '' --uid 1000 mixby

# 빌더 스테이지에서 Python 패키지 복사
COPY --from=builder /root/.local /home/mixby/.local

# 애플리케이션 코드 복사
COPY --chown=mixby:mixby . .

# Entrypoint 스크립트 복사 및 권한 설정 (USER 설정 전)
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# PATH에 사용자 설치 패키지 경로 추가
ENV PATH=/home/mixby/.local/bin:$PATH

# 사용자 변경
USER mixby

# 기본 포트 설정 (빌드 시 덮어쓰기 가능)
ARG API_PORT=8080

# 환경 변수 설정
ENV FLASK_ENV=production \
    PYTHONPATH=/app \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    API_PORT=${API_PORT}

# 포트 노출
EXPOSE ${API_PORT}

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${API_PORT}/health || exit 1

# 애플리케이션 실행
ENTRYPOINT ["docker-entrypoint.sh"]
